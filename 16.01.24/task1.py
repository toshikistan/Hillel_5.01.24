import random
# Завдання 1

# Напишіть функцію, яка обчислює добуток елементів списку цілих. Список передається як параметр. Отриманий результат повертається із функції.
'''
Создаем функцию, которая имеет изначальный результат 1 (так как умножение) и перебирает каждое число из списка,
умножная результат на это число (result = result * i). После перебора возвращает конечный результат в функцию.
Вводим числа через инпут через пробел и создаем список из строки через сплит. После переводим каждый элемент списка
из строки в целое число перебирая элементы в списке. В конце прописываем саму функцию и вывод результата.
'''


def list_mult(mult_list):
    result = 1
    for i in mult_list:
        result *= i
    return result


nums = input("Через пробел введите числа, которые хотите перемножить: ")
nums_list = nums.split(' ')

nums_list = [int(num) for num in nums_list]

mult_res = list_mult(nums_list)
print(mult_res)
print("___" * 10)
# Завдання 2

# Напишіть функцію для знаходження мінімуму у списку цілих. Список передається як параметр. Отриманий результат повертається із функції.
'''
Создаем функцию, которая перебирает все числа из списка. Min_num присваиваем функцию(метод?) min из списка.
Создаем список через инпут + сплит и переводим в целые числа как в предыдущем примере.
Тут я ещё добавил лстрип и рстрип, так как случайно ввел с пробелом и получил ошибку)
Стоит добавить ещё во всех примерах ещё try Except, возможно добавлю.
Ну и вывод по стандарту в принципе.

/////// Список переделал, чтобы он рандомно генерировался, а не через инпут.
'''


def list_min(min_list):
    for i in min_list:
        min_num = min(min_list)
    return min_num


nums_list = [random.randint(1, 99) for i in range(10)]
print(nums_list)
mini_num = list_min(nums_list)
print(mini_num, "является минимальным числом из списка.")
print("___" * 10)
# Завдання 3

# Напишіть функцію, яка визначає кількість простих чисел у списку цілих. Список передається як параметр. Отриманий результат повертається із функції.
'''
Создаю в функции подсчета простых чисел функцию для проверки на простое число. Сначала проверяем, является ли число целым.
Если число меньше или равно 2, оно дает значение фолс и идем проверять дальше. Проверяем остальные числа.
Если число делится нацело на любое число в промежутке от 2 до себя-1, возвращаем фолс и проверяем дальше.
Если не выполняется ни то, ни то, то возвращае тру. 
Идем в функцию подсчета. Задаем изначальное значение 0. 
Если число из нашего списка является простым(если функцию simple_num выдала нам тру), добавляем к подсчету 1.
Если выдала фолс, то не добавляем ничего. В конце возвращаем count и получаем нужное значение.
Работа с инпутом аналогична предыдущим заданиям.


/////////// Список переделал, чтобы он рандомно генерировался, а не через инпут.
'''


def count_simple(simple_list):
    def simple_num(num):
        if num <= 2:
            return False
        for i in range(2, num):
            if num % i == 0:
                return False
        else:
            return True

    count = 0
    for num in simple_list:
        if simple_num(num):
            count += 1
    return count


nums_list = [random.randint(1, 20) for i in range(10)]
print(nums_list)

simple_res = count_simple(nums_list)
print("Количество простых чисел в списке равно", simple_res)
print("___" * 10)
# Завдання 4

# Напишіть функцію, яка видаляє зі списку ціле задане число. З функції потрібно повернути кількість видаленних елементів.
'''
Тут задаю изначальный список, вывожу его на экран и предлагаю выбор, какое число из списка удалить.
Сразу сохраняю длину изначального списка.
Создаю функцию для подсчета количества удаленных чисел.
Перебираю каждое число в списке циклом for и если число из инпута есть в списке, удаляю его из списка.
В конце возвращаю в функцию разницу длины изначального списка и нового списка, таким образом получая количество удаленных элементов.
И вывожу количество удаленных элементов на экран + новый вид списка.
'''
# VAR 1
nums_list = [2, 4, 2, 5, 1, 1, 5, 7, 3, 2, 4, 1]
print(nums_list)
del_choice = int(input("Выберите, какое число из списка хотите удалить?: "))
first_len = len(nums_list)


def count_deleted():
    for i in nums_list:
        if del_choice in nums_list:
            nums_list.remove(del_choice)
    return first_len - len(nums_list)


count = count_deleted()
print(
    f"Количество удаленных элементов равно {count}. \nТеперь список выглядит таким образом: {nums_list}")
print("___" * 10)

'''
Во втором варианте решения я не совсем удаляю. Начало делаю такое же, потом создаю функцию.
В функции создаю 2 пустых списка. Один для того, чтобы посчитать элементы для "удаления". 
Второй чтобы вывести список без удаленного числа.
Перебираю числа, и если число из списка равно числу из инпута, добавляем его в первый список. Если не равно, то во второй.
Возвращаем значение длины первого списка и второй список. Ну и выводим через принт.
'''
# VAR 2
nums_list = [2, 4, 2, 5, 1, 1, 5, 7, 3, 2, 4, 1]
print(nums_list)
del_choice = int(input("Выберите, какое число из списка хотите удалить?: "))


def count_deleted():
    del_choice_list = []
    new_list = []
    for i in nums_list:
        if i == del_choice:
            del_choice_list.append(i)
        elif i != del_choice:
            new_list.append(i)
    return len(del_choice_list), new_list


count, new_list = count_deleted()
print(
    f"Количество удаленных элементов равно {count}. \nТеперь список выглядит таким образом: {new_list}")
print("___" * 10)
# Завдання 5

# Напишіть функцію, яка отримує два списки як параметр і повертає список, що містить елементи обох списків.
'''
Не знаю, насколько правильно я понял задание, поэтому сделал 2 таких варианта.
Сначала создал 2 случайных списка длиной 10 с цифрами от 1 до 9 и вывел эти списки через принт.
Создал функцию для вывода общих элементов. 
Определил переменную в которую добавил пересечение из переведенных в множества списков и вывел пересечение в виде списка.

Потом создал функцию, которая объединяет списки, чтобы вывести все числа из обоих списков в новом списке.
'''
list1 = [random.randint(1, 9) for i in range(10)]
list2 = [random.randint(1, 9) for i in range(10)]
print(list1)
print(list2)


def show_common(list1, list2):
    common = set(list1) & set(list2)
    return (list(common))


def merge_list(list1, list2):
    merged_list = list1 + list2
    return (merged_list)


merge = merge_list(list1, list2)
same_numbers = show_common(list1, list2)
print("Общеие элементы списков: ", same_numbers)
print("Элементы из двух списков: ", merge)
print("___" * 10)
# Завдання 6

# Напишіть функцію, яка обчислює ступінь кожного елемента списку цілих. Значення для ступеня передається як параметр, список також передається як параметр. Функція повертає новий список, який містить отримані результати.
'''
Создаем рандомный список и выводим его.
Создаем функцию, которая будет принимать параметр от инпута.
В функции создаем пустой список, в который будем записывать числа в степени.
Создаем цикл, который проходится по каждому числу в списке и возводит это число в степень.
Записываем каждое число в список. Возвращаем новый список в функцию.
После создаем ввод и переменную результат, в которую передаем введенное число. 
Выводим результат
'''
list1 = [random.randint(1, 9) for i in range(10)]
print(list1)


def degree(num):
    num_degree_list = []
    for i in list1:
        num_degree = i ** num
        num_degree_list.append(num_degree)
    return num_degree_list


num_d = int(
    input("Введите степень, в которую желаете возвести числа из списка: "))
result = degree(num_d)
print(result)
